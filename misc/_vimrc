call plug#begin('D:\Guigui\Work\Prog\_vim\plugged')
Plug 'morhetz/gruvbox'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-dispatch'
Plug 'xavierd/clang_complete'
Plug 'rhysd/vim-clang-format'
call plug#end()
" Theme
set background=dark
autocmd vimenter * ++nested colorscheme gruvbox

noremap <Home> ^

" Follow link with ²
noremap ² <C-]>

" Jump build errors
noremap é :cprev<CR>
noremap è :cnext<CR>

" Change window with hjkl
noremap <C-j> <C-w>j
noremap <C-h> <C-w>h
noremap <C-k> <C-w>k
noremap <C-l> <C-w>l

" Save files on build
set autowrite

" Remedy setup
noremap <F5> :Spawn remedybg.exe start-debugging<CR>
noremap <S-F5> :Spawn remedybg.exe stop-debugging<CR>
:command Breakpoint :exe "Spawn remedybg.exe add-breakpoint-at-file %:p " line('.')
:command RemBreakpoint :exe "Spawn remedybg.exe remove-breakpoint-at-file %:p " line('.')

noremap <F9> :Breakpoint<CR>
noremap <S-F9> :RemBreakpoint<CR>

" Highlight current line
set cursorline

" Display ln as relative
set relativenumber

" Make backspace behave normally
set backspace=indent,eol,start

" Tabs as 4 spaces
set tabstop=4
set shiftwidth=4
set expandtab
set softtabstop=4
set smarttab
set startofline

" Auto Indentation for langs
set cindent

" More accessible
noremap = +

" clang_complete config
let g:clang_library_path='D:\Program Files\LLVM\bin'
let g:clang_jumpto_declaration_key="²"
let g:clang_jumpto_declaration_in_preview_key="<C-W>²"
let g:clang_format#auto_format=1
let g:clang_format#code_style="llvm"

if !exists("*LoadProjectVimrc")
    function! LoadProjectVimrc()
        let vimrcFile = findfile("_vimrc", ".;")
        if !empty(vimrcFile)
            execute ":so" l:vimrcFile
            echo "Loaded project file"
        endif
    endfunction
endif

autocmd DirChanged * :call LoadProjectVimrc()
